type CommandResponse {
  "Response code"
  code: Int
  "Response message"
  message: String
}

type FactsMngSharkAttack {
  "SharkAttack ID"
  id: ID!
  "organization id"
  organizationId: String!
  "SharkAttack active flag"
  active: Boolean!
  name: String
  description: String
  date: String
  year: Int
  type: String
  country: String
  area: String
  location: String
  activity: String
  sex: String
  age: String
  injury: String
  fatal_y_n: String
  time: String
  species: String
  investigator_or_source: String
  pdf: String
  href_formula: String
  href: String
  case_number: String
  case_number0: String
  "object metadata"
  metadata: FactsMngSharkAttackMetadata
}

type FactsMngSharkAttackMetadata {
    createdBy: String
		createdAt: BigInt
		updatedBy: String
		updatedAt: BigInt
}

type FactsMngSharkAttackListing {
  "Listing"
  listing: [FactsMngSharkAttack]
  "query total result count"
  queryTotalResultCount: Int,  
}


input FactsMngSharkAttackFilterInput {
  "Name"
  name: String
  "organization id"
  organizationId: String!
  "SharkAttack active flag"
  active: Boolean
}

input FactsMngSharkAttackPaginationInput {
  "Page"
  page: Int!
  "Count"
  count: Int!
  "query total result count flag"
  queryTotalResultCount: Boolean
}

input FactsMngSharkAttackSortInput {
  field: String!,
  asc: Boolean!,
}

input FactsMngSharkAttackInput {
  "organization id"
  organizationId: String!
  "SharkAttack active flag"
  active: Boolean
  name: String
  description: String
  date: String
  year: Int
  type: String
  country: String
  area: String
  location: String
  activity: String
  sex: String
  age: String
  injury: String
  fatal_y_n: String
  time: String
  species: String
  investigator_or_source: String
  pdf: String
  href_formula: String
  href: String
  case_number: String
  case_number0: String
}


type Query {
  "Get SharkAttacks filtered "
  FactsMngSharkAttackListing(filterInput: FactsMngSharkAttackFilterInput, paginationInput: FactsMngSharkAttackPaginationInput, sortInput: FactsMngSharkAttackSortInput): FactsMngSharkAttackListing
  "Get SharkAttack by its id"
  FactsMngSharkAttack(id: ID!, organizationId: String!): FactsMngSharkAttack
  "Get 5 related by country"
  FactsMngSharkAttacksByCountry(country: String!, limit: Int): [FactsMngSharkAttack]
}

type Mutation {
  "Create a new SharkAttack"
  FactsMngCreateSharkAttack(input: FactsMngSharkAttackInput!): FactsMngSharkAttack
  "Update an SharkAttack"
  FactsMngUpdateSharkAttack(id: ID!, input: FactsMngSharkAttackInput!, merge: Boolean!): FactsMngSharkAttack  
  "Deletes an SharkAttack"
  FactsMngDeleteSharkAttacks(ids: [ID]!): CommandResponse  
  "Import 100 SharkAttacks from public data"
  FactsMngImportSharkAttacks(organizationId: String!): CommandResponse
}


type Subscription {
  "This events is triggered when a sharkAttack updated or deleted"
  FactsMngSharkAttackModified(id: ID!): FactsMngSharkAttack
}
